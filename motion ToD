blueprint:
  name: Time of Day Motion Control with Fade and Color/Brightness
  description: Control lights based on motion, time of day, and adjust color temperature and brightness with fade effects
  domain: automation
  input:
    motion_entity:
      name: Motion Sensor
      description: Motion sensor to trigger the automation
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    light_entity:
      name: Light
      description: Light entity to control
      selector:
        target:
          entity:
            domain: light
    morning_start_time:
      name: Morning Start Time
      description: Time when morning starts
      selector:
        time: {}
    evening_start_time:
      name: Evening Start Time
      description: Time when evening starts
      selector:
        time: {}
    night_start_time:
      name: Night Start Time
      description: Time when night starts
      selector:
        time: {}
    morning_color_temp:
      name: Morning Color Temperature
      description: Color temperature for morning
      selector:
        number:
          min: 150
          max: 500
          unit_of_measurement: "mired"
          mode: slider
          step: 10
    evening_color_temp:
      name: Evening Color Temperature
      description: Color temperature for evening
      selector:
        number:
          min: 150
          max: 500
          unit_of_measurement: "mired"
          mode: slider
          step: 10
    night_color_temp:
      name: Night Color Temperature
      description: Color temperature for night
      selector:
        number:
          min: 150
          max: 500
          unit_of_measurement: "mired"
          mode: slider
          step: 10
    morning_brightness:
      name: Morning Brightness
      description: Brightness level for morning
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
          mode: slider
          step: 5
    evening_brightness:
      name: Evening Brightness
      description: Brightness level for evening
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
          mode: slider
          step: 5
    night_brightness:
      name: Night Brightness
      description: Brightness level for night
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
          mode: slider
          step: 5
    fade_duration:
      name: Fade Duration
      description: Duration for fade in/out effects (in seconds)
      default: 5
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: "seconds"
          mode: slider
          step: 1

mode: restart
max_exceeded: silent

trigger:
  platform: state
  entity_id: "{{ input.motion_entity }}"
  to: "on"

condition:
  condition: template
  value_template: >
    {% set current_hour = now().hour %}
    {% set morning_start = states('input_datetime.morning_start_time') | int %}
    {% set evening_start = states('input_datetime.evening_start_time') | int %}
    {% set night_start = states('input_datetime.night_start_time') | int %}
    {{ (morning_start <= current_hour < evening_start) or
       (evening_start <= current_hour < night_start) or
       (night_start <= current_hour <= 23) }}

action:
  - service: light.turn_on
    target: !input light_entity
    data:
      brightness: >
        {% if morning_start <= current_hour < evening_start %}
          {{ states('input_number.morning_brightness') | int }}
        {% elif evening_start <= current_hour < night_start %}
          {{ states('input_number.evening_brightness') | int }}
        {% else %}
          {{ states('input_number.night_brightness') | int }}
        {% endif %}
      color_temp: >
        {% if morning_start <= current_hour < evening_start %}
          {{ states('input_number.morning_color_temp') | int }}
        {% elif evening_start <= current_hour < night_start %}
          {{ states('input_number.evening_color_temp') | int }}
        {% else %}
          {{ states('input_number.night_color_temp') | int }}
        {% endif %}
      transition: "{{ states('input_number.fade_duration') }}"
